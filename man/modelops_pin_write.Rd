% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pin-read-write.R
\name{modelops_pin_write}
\alias{modelops_pin_write}
\alias{modelops_pin_read}
\title{Read and write a trained model to a board of models}
\usage{
modelops_pin_write(modelops)

modelops_pin_read(board, name, version = NULL)
}
\arguments{
\item{modelops}{A deployable model object created with \code{\link[=modelops]{modelops()}}}

\item{board}{A pin board, created by \code{\link[pins:board_folder]{board_folder()}}, \code{\link[pins:board_rsconnect]{board_rsconnect()}},
\code{\link[pins:board_url]{board_url()}} or other other \code{board_} function.}

\item{name}{Pin name.}

\item{version}{Retrieve a specific version of a pin. Use \code{\link[pins:pin_versions]{pin_versions()}} to
find out which versions are available and when they were created.}
}
\description{
Use \code{modelops_pin_write()} to pin a trained model to a board of models,
along with an input prototype for new data and other model metadata. Use
\code{modelops_pin_read()} to retried that pinned object.
}
\details{
These functions read and write a \code{\link[=modelops]{modelops()}} pin on the specified
\code{board} containing the model object itself and other elements needed for
prediction, such as the model's input data prototype or which packages are
needed at prediction time. You may use \code{\link[pins:pin_read]{pins::pin_read()}} or
\code{\link[pins:pin_meta]{pins::pin_meta()}} to handle the pin, but \code{modelops_pin_read()} returns a
\code{\link[=modelops]{modelops()}} object ready for deployment.
}
\examples{
library(pins)
model_board <- board_temp()

cars_lm <- lm(mpg ~ ., data = mtcars)
m <- modelops(cars_lm, "cars_linear", model_board)
modelops_pin_write(m)
model_board

modelops_pin_read(model_board, "cars_linear")

# can use `version` argument to read a specific version:
pin_versions(model_board, "cars_linear")

}
