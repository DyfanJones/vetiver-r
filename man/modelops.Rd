% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/modelops.R
\name{modelops}
\alias{modelops}
\alias{modelops.default}
\alias{modelops.lm}
\alias{new_modelops}
\title{Create a modelops object for deployment of a trained model}
\usage{
modelops(
  model,
  model_name,
  board,
  ...,
  desc = NULL,
  metadata = list(),
  ptype = TRUE,
  versioned = NULL
)

\method{modelops}{default}(model, ...)

\method{modelops}{lm}(
  model,
  model_name,
  board,
  ...,
  desc = NULL,
  metadata = list(),
  ptype = TRUE,
  versioned = NULL
)

new_modelops(
  model,
  model_name = character(),
  board = pins::board_temp(),
  ...,
  desc = character(),
  metadata = modelops::modelops_meta(),
  ptype = TRUE,
  versioned = NULL
)
}
\arguments{
\item{model}{A trained model, such as an \code{lm()} model or a tidymodels
\code{\link[workflows:workflow]{workflows::workflow()}}.}

\item{model_name}{Model name or ID.}

\item{board}{A pin board to store and version the \code{model}, created by
\code{\link[pins:board_folder]{pins::board_folder()}}, \code{\link[pins:board_rsconnect]{pins::board_rsconnect()}}, or other \code{board_}
function from the pins package.}

\item{...}{Other method-specific arguments passed to \code{\link[=modelops_slice_zero]{modelops_slice_zero()}}
to compute an input data prototype.}

\item{desc}{A text description of the model, most important for shared
boards so that others can understand what the model is. If omitted,
a brief description of the contents will be generated.}

\item{metadata}{A list containing additional metadata to store with the pin.
When retrieving the pin, this will be stored in the \code{user} key, to
avoid potential clashes with the metadata that pins itself uses.}

\item{ptype}{Should an input data prototype be stored with the model?
The options are \code{TRUE} (the default, which stores a zero-row slice of the
training data), \code{FALSE} (no input data prototype for checking), or a
dataframe.}

\item{versioned}{Should the model object be versioned? The default, \code{NULL},
will use the default for \code{board}.}
}
\value{
A new \code{modelops} object
}
\description{
A \code{modelops()} object collects the information needed to store, version,
and deploy a trained model.
}
\details{
Once your \code{modelops()} object has been created, you can:
\itemize{
\item store and version it as a pin with \code{\link[=modelops_pin_write]{modelops_pin_write()}}
\item create an API endpoint for it with \code{\link[=modelops_pr_predict]{modelops_pr_predict()}}
}

If you provide your own data to \code{ptype}, consider checking that it has the
same structure as your training data (perhaps with \code{\link[hardhat:scream]{hardhat::scream()}})
and/or simulating data to avoid leaking PII via your deployed model.
}
\examples{

cars_lm <- lm(mpg ~ ., data = mtcars)
modelops(cars_lm, "cars_linear", pins::board_temp())

}
