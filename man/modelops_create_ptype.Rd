% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/modelops-create-ptype.R
\name{modelops_create_ptype}
\alias{modelops_create_ptype}
\alias{modelops_slice_zero}
\alias{modelops_slice_zero.default}
\alias{modelops_slice_zero.lm}
\title{Return a modelops input data prototype}
\usage{
modelops_create_ptype(model, ptype, ...)

modelops_slice_zero(model, ...)

\method{modelops_slice_zero}{default}(model, ...)

\method{modelops_slice_zero}{lm}(model, ...)
}
\arguments{
\item{model}{A trained model, such as an \code{lm()} model or a tidymodels
\code{\link[workflows:workflow]{workflows::workflow()}}.}

\item{ptype}{Should an input data prototype be stored with the model?
The options are \code{TRUE} (the default, which stores a zero-row slice of the
training data), \code{FALSE} (no input data prototype for checking), or a
dataframe.}

\item{...}{Other method-specific arguments passed to \code{\link[=modelops_slice_zero]{modelops_slice_zero()}}
to compute an input data prototype.}
}
\description{
These are developer-facing functions, useful for supporting new model types.
A \code{\link[=modelops]{modelops()}} object optionally stores an input data prototype for checking
at prediction time.
}
\details{
\itemize{
\item The default, \code{TRUE}, finds a zero-row slice of the training data via
\code{\link[=modelops_slice_zero]{modelops_slice_zero()}}.
\item \code{FALSE} opts out of storing any input data prototype.
\item You may pass your own data to \code{ptype}, but be sure to check that it has
the same structure as your training data, perhaps with \code{\link[hardhat:scream]{hardhat::scream()}}.
}
}
\examples{

cars_lm <- lm(mpg ~ cyl + disp, data = mtcars)

modelops_create_ptype(cars_lm, TRUE)

## calls the right method for `model` via:
modelops_slice_zero(cars_lm)

## can also turn off `ptype`
modelops_create_ptype(cars_lm, FALSE)

}
